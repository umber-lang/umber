           default   rel
           global    umber_main#ReadEffect2
           global    umber_resume_wrapper:weak
           global    ReadEffect2.no_effects
           global    umber_main#ReadEffect2.handle_effects.inner#11.handle_effects.inner#2
           global    ReadEffect2.#binding.2
           global    ReadEffect2.read
           global    ReadEffect2.foo
           global    umber_main#ReadEffect2.handle_effects.inner#5
           global    ReadEffect2.test
           global    umber_main#ReadEffect2.handle_effects.inner#8
           global    ReadEffect2.higher_order_handler.handle_effects.inner#2
           global    umber_main#ReadEffect2.handle_effects.inner#11
           global    ReadEffect2.#binding.1
           global    ReadEffect2.value_branch
           global    ReadEffect2.ask
           global    ReadEffect2.nested_handler
           global    ReadEffect2.read_and_add
           global    ReadEffect2.#fun.1
           global    ReadEffect2.resumed_twice
           global    ReadEffect2.run_both
           global    ReadEffect2.higher_order_handler
           global    ReadEffect2.#fun.2
           global    umber_main#ReadEffect2.handle_effects.inner#2
           global    ReadEffect2.#fun.2#closure:weak
           global    ReadEffect2.#fun.2#closure_wrapper_fun:weak
           global    Std.Prelude.ignore#closure:weak
           global    Std.Prelude.ignore#closure_wrapper_fun:weak
           global    ReadEffect2.#fun.1#closure:weak
           global    ReadEffect2.#fun.1#closure_wrapper_fun:weak
           global    int.5:weak
           global    int.1:weak
           global    string.0:weak
           global    string.931878710:weak
           global    int.7:weak
           global    int.__1#1027118000:weak
           global    string.1007110160:weak
           global    string.983022309:weak
           global    int.6:weak
           global    string.723483344:weak
           global    string.868872898:weak
           extern    umber_fiber_destroy
           extern    Std.Prelude.Operators.__#411843497
           extern    umber_fiber_create
           extern    Std.Prelude.Operators.__#1049114386
           extern    umber_gc_alloc
           extern    Std.Prelude.print_string
           extern    umber_fiber_find_handler_and_detach
           extern    Std.Prelude.print
           extern    umber_fiber_reparent
           extern    Std.Prelude.Operators.__#506761450
           extern    Std.Prelude.ignore
           extern    Std.Prelude.print_int

           section   .text

umber_main#ReadEffect2:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 32
           mov       rdi, r14
           call      umber_fiber_create wrt ..plt
           push      .handle_effects.end#1
           mov       qword [rax + 32], 1
           mov       qword [rax + 40], 847057113
           mov       qword [rax + 48], .handle_effects.handler0#0
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, rax
           mov       r9, qword [r14 + 24]
           lea       rsp, byte [r14 + r9]
           mov       rbp, rsp
           call      umber_main#ReadEffect2.handle_effects.inner#2
           mov       rdi, r14
           mov       r14, qword [r14]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           sub       rsp, 8
           mov       r13, rax
           call      umber_fiber_destroy wrt ..plt
           mov       rax, r13
           add       rsp, 8
           ret       
.handle_effects.handler0#0:
           sub       rsp, 8
           mov       r9, rax
           mov       rax, r9
           mov       rbx, int.1
           call      qword [r9 + 8]
           add       rsp, 8
           ret       
.handle_effects.end#1:
           mov       qword [ReadEffect2.resumed_twice], rax
           mov       rdi, r14
           call      umber_fiber_create wrt ..plt
           push      .handle_effects.end#4
           mov       qword [rax + 32], 1
           mov       qword [rax + 40], 847057113
           mov       qword [rax + 48], .handle_effects.handler0#3
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, rax
           mov       r9, qword [r14 + 24]
           lea       rsp, byte [r14 + r9]
           mov       rbp, rsp
           call      umber_main#ReadEffect2.handle_effects.inner#5
           mov       rdi, r14
           mov       r14, qword [r14]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           sub       rsp, 8
           mov       r13, rax
           call      umber_fiber_destroy wrt ..plt
           mov       rax, qword [r13 + 8]
           add       rsp, 8
           ret       
.handle_effects.handler0#3:
           sub       rsp, 8
           mov       r9, rax
           mov       rax, r9
           mov       rbx, int.__1#1027118000
           call      qword [r9 + 8]
           add       rsp, 8
           ret       
.handle_effects.end#4:
           mov       qword [ReadEffect2.value_branch], rax
           mov       rax, ReadEffect2.#fun.2#closure
           call      ReadEffect2.higher_order_handler
           mov       qword [ReadEffect2.#binding.1], rax
           mov       rdi, r14
           call      umber_fiber_create wrt ..plt
           push      .handle_effects.end#7
           mov       qword [rax + 32], 1
           mov       qword [rax + 40], 847057113
           mov       qword [rax + 48], .handle_effects.handler0#6
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, rax
           mov       r9, qword [r14 + 24]
           lea       rsp, byte [r14 + r9]
           mov       rbp, rsp
           call      umber_main#ReadEffect2.handle_effects.inner#8
           mov       rdi, r14
           mov       r14, qword [r14]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           sub       rsp, 8
           mov       r13, rax
           call      umber_fiber_destroy wrt ..plt
           mov       rax, r13
           add       rsp, 8
           ret       
.handle_effects.handler0#6:
           sub       rsp, 8
           mov       rax, int.6
           add       rsp, 8
           ret       
.handle_effects.end#7:
           mov       qword [ReadEffect2.no_effects], rax
           mov       rdi, r14
           call      umber_fiber_create wrt ..plt
           push      .handle_effects.end#10
           mov       qword [rax + 32], 1
           mov       qword [rax + 40], 847057113
           mov       qword [rax + 48], .handle_effects.handler0#9
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, rax
           mov       r9, qword [r14 + 24]
           lea       rsp, byte [r14 + r9]
           mov       rbp, rsp
           call      umber_main#ReadEffect2.handle_effects.inner#11
           mov       rdi, r14
           mov       r14, qword [r14]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           sub       rsp, 8
           mov       r13, rax
           call      umber_fiber_destroy wrt ..plt
           mov       rax, r13
           add       rsp, 8
           ret       
.handle_effects.handler0#9:
           sub       rsp, 8
           mov       r9, rax
           mov       rax, r9
           mov       rbx, int.7
           call      qword [r9 + 8]
           add       rsp, 8
           ret       
.handle_effects.end#10:
           mov       qword [ReadEffect2.nested_handler], rax
           mov       rax, string.1007110160
           mov       rbx, qword [ReadEffect2.no_effects]
           call      ReadEffect2.test
           mov       qword [rbp - 24], rax
           mov       rax, string.931878710
           mov       rbx, qword [ReadEffect2.resumed_twice]
           call      ReadEffect2.test
           mov       rbx, rax
           mov       rax, qword [rbp - 24]
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           mov       qword [rbp - 16], rax
           mov       rax, string.983022309
           mov       rbx, qword [ReadEffect2.value_branch]
           call      ReadEffect2.test
           mov       rbx, rax
           mov       rax, qword [rbp - 16]
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           mov       qword [rbp - 8], rax
           mov       rax, string.723483344
           mov       rbx, qword [ReadEffect2.nested_handler]
           call      ReadEffect2.test
           mov       rbx, rax
           mov       rax, qword [rbp - 8]
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           mov       r9, rax
           mov       qword [ReadEffect2.#binding.2], r9
           add       rsp, 32
           pop       rbp
           ret       

umber_main#ReadEffect2.handle_effects.inner#11.handle_effects.inner#2:
           push      rbp
           mov       rbp, rsp
           mov       rax, 1
           call      ReadEffect2.ask
           pop       rbp
           ret       

ReadEffect2.read:
           push      rbp
           mov       rbp, rsp
           call      ReadEffect2.ask
           pop       rbp
           ret       

ReadEffect2.foo:
           push      rbp
           mov       rbp, rsp
           mov       rax, ReadEffect2.#fun.1#closure
           mov       rbx, Std.Prelude.ignore#closure
           mov       rdi, int.5
           call      ReadEffect2.run_both
           pop       rbp
           ret       

umber_main#ReadEffect2.handle_effects.inner#5:
           push      rbp
           mov       rbp, rsp
           mov       rax, 1
           call      ReadEffect2.foo
           pop       rbp
           ret       

ReadEffect2.test:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 32
           mov       qword [rbp - 24], rbx
           mov       rbx, string.868872898
           call      Std.Prelude.Operators.__#411843497 wrt ..plt
           call      Std.Prelude.print_string wrt ..plt
           mov       qword [rbp - 16], rax
           mov       rax, qword [rbp - 24]
           call      Std.Prelude.print_int wrt ..plt
           mov       rbx, rax
           mov       rax, qword [rbp - 16]
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           mov       qword [rbp - 8], rax
           mov       rax, string.0
           call      Std.Prelude.print wrt ..plt
           mov       rbx, rax
           mov       rax, qword [rbp - 8]
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           add       rsp, 32
           pop       rbp
           ret       

umber_main#ReadEffect2.handle_effects.inner#8:
           push      rbp
           mov       rbp, rsp
           mov       rax, int.5
           pop       rbp
           ret       

ReadEffect2.higher_order_handler.handle_effects.inner#2:
           push      rbp
           mov       rbp, rsp
           mov       r9, rax
           mov       rax, r9
           mov       rbx, 1
           call      qword [r9 + 8]
           pop       rbp
           ret       

umber_main#ReadEffect2.handle_effects.inner#11:
           push      rbp
           mov       rbp, rsp
           mov       rdi, r14
           call      umber_fiber_create wrt ..plt
           push      .handle_effects.end#1
           mov       qword [rax + 32], 1
           mov       qword [rax + 40], 847057113
           mov       qword [rax + 48], .handle_effects.handler0#0
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, rax
           mov       r9, qword [r14 + 24]
           lea       rsp, byte [r14 + r9]
           mov       rbp, rsp
           call      umber_main#ReadEffect2.handle_effects.inner#11.handle_effects.inner#2
           mov       r9, r14
           mov       r14, qword [r14]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           sub       rsp, 8
           mov       r12, rax
           mov       rdi, r9
           call      umber_fiber_destroy wrt ..plt
           mov       rbx, int.1
           mov       rax, r12
           call      Std.Prelude.Operators.__#1049114386 wrt ..plt
           add       rsp, 8
           ret       
.handle_effects.handler0#0:
           sub       rsp, 8
           mov       r9, rax
           mov       rax, r9
           mov       rbx, int.5
           call      qword [r9 + 8]
           add       rsp, 8
           ret       
.handle_effects.end#1:
           pop       rbp
           ret       

ReadEffect2.ask:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       qword [rbp - 8], rax
           sub       rsp, 16
           mov       rdi, r14
           mov       rsi, 847057113
           mov       rdx, rsp
           call      umber_fiber_find_handler_and_detach wrt ..plt
           mov       r13, rax
           mov       r9, qword [rsp]
           mov       qword [rbp - 16], r9
           add       rsp, 16
           mov       rdi, 32
           call      umber_gc_alloc wrt ..plt
           mov       word [rax], 32784
           mov       word [rax + 2], 3
           mov       qword [rax + 8], umber_resume_wrapper
           mov       qword [rax + 16], r14
           mov       qword [rax + 24], .perform_effect.resume_here#0
           mov       rbx, qword [rbp - 8]
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, qword [rbp - 16]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           jmp       r13
.perform_effect.resume_here#0:
           add       rsp, 16
           pop       rbp
           ret       

ReadEffect2.read_and_add:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       rax, 1
           call      ReadEffect2.ask
           mov       qword [rbp - 8], rax
           mov       rax, 1
           call      ReadEffect2.ask
           mov       rbx, rax
           mov       rax, qword [rbp - 8]
           call      Std.Prelude.Operators.__#1049114386 wrt ..plt
           add       rsp, 16
           pop       rbp
           ret       

ReadEffect2.#fun.1:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       qword [rbp - 8], rax
           mov       rax, 1
           call      ReadEffect2.read_and_add
           mov       rbx, rax
           mov       rax, qword [rbp - 8]
           call      Std.Prelude.Operators.__#1049114386 wrt ..plt
           add       rsp, 16
           pop       rbp
           ret       

ReadEffect2.run_both:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 32
           mov       r9, rax
           mov       qword [rbp - 8], rbx
           mov       qword [rbp - 16], rdi
           mov       rax, r9
           mov       rbx, qword [rbp - 16]
           call      qword [r9 + 8]
           mov       qword [rbp - 24], rax
           mov       rax, qword [rbp - 8]
           mov       rbx, qword [rbp - 16]
           mov       r9, qword [rbp - 8]
           call      qword [r9 + 8]
           mov       r13, rax
           mov       rdi, 24
           call      umber_gc_alloc wrt ..plt
           mov       word [rax], 0
           mov       word [rax + 2], 2
           mov       r9, qword [rbp - 24]
           mov       qword [rax + 8], r9
           mov       qword [rax + 16], r13
           add       rsp, 32
           pop       rbp
           ret       

ReadEffect2.higher_order_handler:
           push      rbp
           mov       rbp, rsp
           mov       r13, rax
           mov       rdi, r14
           call      umber_fiber_create wrt ..plt
           mov       r9, rax
           push      .handle_effects.end#1
           mov       qword [r9 + 32], 1
           mov       qword [r9 + 40], 847057113
           mov       qword [r9 + 48], .handle_effects.handler0#0
           mov       rax, r13
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, r9
           mov       r9, qword [r14 + 24]
           lea       rsp, byte [r14 + r9]
           mov       rbp, rsp
           call      ReadEffect2.higher_order_handler.handle_effects.inner#2
           mov       r9, r14
           mov       r14, qword [r14]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           sub       rsp, 8
           mov       r13, rax
           mov       rdi, r9
           call      umber_fiber_destroy wrt ..plt
           mov       rax, r13
           add       rsp, 8
           ret       
.handle_effects.handler0#0:
           sub       rsp, 8
           mov       r9, rax
           mov       rax, 1
           add       rsp, 8
           ret       
.handle_effects.end#1:
           pop       rbp
           ret       

ReadEffect2.#fun.2:
           push      rbp
           mov       rbp, rsp
           mov       rax, 1
           call      ReadEffect2.ask
           call      Std.Prelude.ignore wrt ..plt
           pop       rbp
           ret       

umber_main#ReadEffect2.handle_effects.inner#2:
           push      rbp
           mov       rbp, rsp
           mov       rax, 1
           call      ReadEffect2.read_and_add
           pop       rbp
           ret       

ReadEffect2.#fun.2#closure_wrapper_fun:
           push      rbp
           mov       rbp, rsp
           mov       rax, rbx
           call      ReadEffect2.#fun.2
           pop       rbp
           ret       

Std.Prelude.ignore#closure_wrapper_fun:
           push      rbp
           mov       rbp, rsp
           mov       rax, rbx
           call      Std.Prelude.ignore
           pop       rbp
           ret       

ReadEffect2.#fun.1#closure_wrapper_fun:
           push      rbp
           mov       rbp, rsp
           mov       rax, rbx
           call      ReadEffect2.#fun.1
           pop       rbp
           ret       

umber_resume_wrapper:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       qword [rbp - 8], rax
           mov       r9, qword [rbp - 8]
           mov       rdi, qword [r9 + 16]
           mov       rsi, r14
           call      umber_fiber_reparent wrt ..plt
           push      .end#0
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r9, qword [rbp - 8]
           mov       r14, qword [r9 + 16]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           mov       rax, rbx
           jmp       qword [r9 + 24]
.end#0:
           add       rsp, 16
           pop       rbp
           ret       

           section   .rodata
           sectalign 8
int.5:
           dw        32769
           dw        1
           dd        0
           dq        5
int.1:
           dw        32769
           dw        1
           dd        0
           dq        1
string.0:
           dw        32772
           dw        1
           dd        0
           db        `\x0\x0\x0\x0\x0\x0\x0\x7`
string.931878710:
           dw        32772
           dw        2
           dd        0
           db        `Resumed twice\x0\x0\x2`
int.7:
           dw        32769
           dw        1
           dd        0
           dq        7
int.__1#1027118000:
           dw        32769
           dw        1
           dd        0
           dq        -1
string.1007110160:
           dw        32772
           dw        2
           dd        0
           db        `No effects\x0\x0\x0\x0\x0\x5`
string.983022309:
           dw        32772
           dw        2
           dd        0
           db        `Value branch\x0\x0\x0\x3`
int.6:
           dw        32769
           dw        1
           dd        0
           dq        6
string.723483344:
           dw        32772
           dw        2
           dd        0
           db        `Nested handler\x0\x1`
string.868872898:
           dw        32772
           dw        1
           dd        0
           db        `: \x0\x0\x0\x0\x0\x5`
ReadEffect2.#fun.2#closure:
           dw        12289
           dw        1
           dd        0
           dq        ReadEffect2.#fun.2#closure_wrapper_fun
Std.Prelude.ignore#closure:
           dw        12289
           dw        1
           dd        0
           dq        Std.Prelude.ignore#closure_wrapper_fun
ReadEffect2.#fun.1#closure:
           dw        12289
           dw        1
           dd        0
           dq        ReadEffect2.#fun.1#closure_wrapper_fun

           section   .bss
           sectalign 8
ReadEffect2.no_effects:
           resq      1
ReadEffect2.#binding.2:
           resq      1
ReadEffect2.#binding.1:
           resq      1
ReadEffect2.value_branch:
           resq      1
ReadEffect2.nested_handler:
           resq      1
ReadEffect2.resumed_twice:
           resq      1


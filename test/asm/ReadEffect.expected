           default   rel
           global    umber_main#ReadEffect
           global    umber_resume_wrapper:weak
           global    ReadEffect.#binding.1
           global    ReadEffect.seven
           global    ReadEffect.seven.handle_effects.inner#3
           global    ReadEffect.ask
           global    string.0:weak
           global    int.1:weak
           global    int.2:weak
           extern    umber_fiber_reparent
           extern    umber_fiber_destroy
           extern    Std.Prelude.Operators.__#506761450
           extern    umber_gc_alloc
           extern    umber_fiber_find_handler_and_detach
           extern    umber_fiber_create
           extern    Std.Prelude.print_int
           extern    Std.Prelude.Operators.__#1049114386
           extern    Std.Prelude.print

           section   .text

umber_main#ReadEffect:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       rax, 1
           call      ReadEffect.seven
           call      Std.Prelude.print_int wrt ..plt
           mov       qword [rbp - 8], rax
           mov       rax, string.0
           call      Std.Prelude.print wrt ..plt
           mov       rbx, rax
           mov       rax, qword [rbp - 8]
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           mov       r9, rax
           mov       qword [ReadEffect.#binding.1], r9
           add       rsp, 16
           pop       rbp
           ret       

ReadEffect.seven:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       rdi, r14
           call      umber_fiber_create wrt ..plt
           push      .handle_effects.end#2
           mov       qword [rax + 32], 1
           mov       qword [rax + 40], 347799204
           mov       qword [rax + 48], .handle_effects.handler0#0
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, rax
           mov       r9, qword [r14 + 24]
           lea       rsp, byte [r14 + r9]
           mov       rbp, rsp
           call      ReadEffect.seven.handle_effects.inner#3
           mov       rdi, r14
           mov       r14, qword [r14]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           sub       rsp, 8
           mov       r12, rax
           call      umber_fiber_destroy wrt ..plt
           mov       rbx, int.1
           mov       rax, r12
           call      Std.Prelude.Operators.__#1049114386 wrt ..plt
           add       rsp, 8
           ret       
.handle_effects.handler0#0:
           sub       rsp, 8
           mov       qword [rbp - 8], rax
           mov       rax, qword [rbp - 8]
           mov       rbx, int.2
           mov       r9, qword [rbp - 8]
           call      qword [r9 + 8]
           mov       rbx, int.1
           call      Std.Prelude.Operators.__#1049114386 wrt ..plt
           add       rsp, 8
           ret       
.handle_effects.end_handlers#1:
           mov       r9, qword [rbp - 8]
           mov       rdi, qword [r9 + 16]
           call      umber_fiber_destroy wrt ..plt
           jmp       .handle_effects.end#2
.handle_effects.end#2:
           add       rsp, 16
           pop       rbp
           ret       

ReadEffect.seven.handle_effects.inner#3:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       rax, 1
           call      ReadEffect.ask
           mov       qword [rbp - 8], rax
           mov       rax, 1
           call      ReadEffect.ask
           mov       rbx, rax
           mov       rax, qword [rbp - 8]
           call      Std.Prelude.Operators.__#1049114386 wrt ..plt
           add       rsp, 16
           pop       rbp
           ret       

ReadEffect.ask:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       qword [rbp - 8], rax
           sub       rsp, 16
           mov       rdi, r14
           mov       rsi, 347799204
           mov       rdx, rsp
           call      umber_fiber_find_handler_and_detach wrt ..plt
           mov       r13, rax
           mov       r9, qword [rsp]
           mov       qword [rbp - 16], r9
           add       rsp, 16
           mov       rdi, 32
           call      umber_gc_alloc wrt ..plt
           mov       word [rax], 32784
           mov       word [rax + 2], 3
           mov       qword [rax + 8], umber_resume_wrapper
           mov       qword [rax + 16], r14
           mov       qword [rax + 24], .perform_effect.resume_here#0
           mov       rbx, qword [rbp - 8]
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r14, qword [rbp - 16]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           jmp       r13
.perform_effect.resume_here#0:
           add       rsp, 16
           pop       rbp
           ret       

umber_resume_wrapper:
           push      rbp
           mov       rbp, rsp
           sub       rsp, 16
           mov       qword [rbp - 8], rax
           mov       r9, qword [rbp - 8]
           mov       rdi, qword [r9 + 16]
           mov       rsi, r14
           call      umber_fiber_reparent wrt ..plt
           push      .end#0
           mov       qword [r14 + 8], rbp
           mov       qword [r14 + 16], rsp
           mov       r9, qword [rbp - 8]
           mov       r14, qword [r9 + 16]
           mov       rbp, qword [r14 + 8]
           mov       rsp, qword [r14 + 16]
           mov       rax, rbx
           jmp       qword [r9 + 24]
.end#0:
           add       rsp, 16
           pop       rbp
           ret       

           section   .rodata
           sectalign 8
string.0:
           dw        32772
           dw        1
           dd        0
           db        `\x0\x0\x0\x0\x0\x0\x0\x7`
int.1:
           dw        32769
           dw        1
           dd        0
           dq        1
int.2:
           dw        32769
           dw        1
           dd        0
           dq        2

           section   .bss
           sectalign 8
ReadEffect.#binding.1:
           resq      1


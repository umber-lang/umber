           default   rel
           global    umber_main#OpSectionLeft
           global    OpSectionLeft.apply
           global    OpSectionLeft.__#892202222
           global    OpSectionLeft.#binding.1
           global    OpSectionLeft.#fun.1
           global    OpSectionLeft.__#892202222#closure:weak
           global    OpSectionLeft.__#892202222#closure_wrapper_fun:weak
           global    string.525968662:weak
           global    string.51739196:weak
           global    string.238791689:weak
           global    string.741609073:weak
           global    string.352391525:weak
           extern    Std.Prelude.Operators.__#506761450
           extern    umber_gc_alloc
           extern    Std.Prelude.Operators.__#411843497
           extern    Std.Prelude.print

           section   .text

umber_main#OpSectionLeft:
           sub       rsp, 24
           mov       rax, OpSectionLeft.__#892202222#closure
           call      OpSectionLeft.apply
           mov       qword [rsp], rax
           mov       rax, string.51739196
           call      Std.Prelude.print wrt ..plt
           mov       qword [rsp + 8], rax
           mov       rax, qword [rsp]
           mov       rbx, string.525968662
           mov       r9, qword [rsp]
           call      qword [r9 + 8]
           mov       rbx, rax
           mov       rax, qword [rsp + 8]
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           mov       r9, rax
           mov       qword [OpSectionLeft.#binding.1], r9
           add       rsp, 24
           ret       

OpSectionLeft.apply:
           sub       rsp, 8
           mov       qword [rsp], rax
           mov       rax, string.238791689
           call      Std.Prelude.print wrt ..plt
           mov       rbx, string.352391525
           call      Std.Prelude.Operators.__#506761450 wrt ..plt
           mov       r13, rax
           mov       rdi, 32
           call      umber_gc_alloc wrt ..plt
           mov       word [rax], 12289
           mov       word [rax + 2], 3
           mov       qword [rax + 8], OpSectionLeft.#fun.1
           mov       r9, qword [rsp]
           mov       qword [rax + 16], r9
           mov       qword [rax + 24], r13
           add       rsp, 8
           ret       

OpSectionLeft.__#892202222:
           sub       rsp, 8
           mov       qword [rsp], rbx
           mov       rbx, string.741609073
           call      Std.Prelude.Operators.__#411843497 wrt ..plt
           mov       rbx, qword [rsp]
           call      Std.Prelude.Operators.__#411843497 wrt ..plt
           call      Std.Prelude.print wrt ..plt
           add       rsp, 8
           ret       

OpSectionLeft.#fun.1:
           sub       rsp, 8
           mov       r10, qword [rax + 16]
           mov       r11, qword [rax + 16]
           mov       r9, qword [rax + 24]
           mov       rdi, rbx
           mov       rax, r11
           mov       rbx, r9
           call      qword [r10 + 8]
           add       rsp, 8
           ret       

OpSectionLeft.__#892202222#closure_wrapper_fun:
           sub       rsp, 8
           mov       r9, rdi
           mov       rax, rbx
           mov       rbx, r9
           call      OpSectionLeft.__#892202222
           add       rsp, 8
           ret       

           section   .rodata
           sectalign 8
string.525968662:
           dw        32772
           dw        1
           dd        0
           db        `penne\x0\x0\x2`
string.51739196:
           dw        32772
           dw        1
           dd        0
           db        `between\x0`
string.238791689:
           dw        32772
           dw        2
           dd        0
           db        `called apply\x0\x0\x0\x3`
string.741609073:
           dw        32772
           dw        3
           dd        0
           db        ` is mid. I prefer \x0\x0\x0\x0\x0\x5`
string.352391525:
           dw        32772
           dw        1
           dd        0
           db        `lasagna\x0`
OpSectionLeft.__#892202222#closure:
           dw        12289
           dw        1
           dd        0
           dq        OpSectionLeft.__#892202222#closure_wrapper_fun

           section   .bss
           sectalign 8
OpSectionLeft.#binding.1:
           resq      1


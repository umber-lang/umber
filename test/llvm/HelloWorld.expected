; ModuleID = './examples/HelloWorld.um'
source_filename = "./examples/HelloWorld.um"
target datalayout = "i32:64-i64:64-p:64:64-f64:64"

%umber_block = type { %umber_header, [0 x i64] }
%umber_header = type { i16, i16, i32 }
%umber_block2 = type { %umber_header, [2 x i64] }

@"*binding" = global %umber_block* null
@string.578489388 = constant %umber_block2 { %umber_header { i16 -32764, i16 2, i32 0 }, [16 x i8] c"Hello world!\00\00\00\03" }

define i32 @"umber_main:./examples/HelloWorld.um"() {
entry:
  %fun_call = tail call tailcc %umber_block* @Std.Prelude.print(%umber_block* bitcast (%umber_block2* @string.578489388 to %umber_block*))
  store %umber_block* %fun_call, %umber_block** @"*binding", align 8
  ret i32 0
}

declare tailcc %umber_block* @Std.Prelude.print(%umber_block*)


; ModuleID = './examples/OpSectionRight.um'
source_filename = "./examples/OpSectionRight.um"
target datalayout = "i32:64-i64:64-p:64:64-f64:64"

%umber_block = type { %umber_header, [0 x i64] }
%umber_header = type { i16, i16, i32 }
%umber_block8b = type { %umber_header, [8 x i8] }
%umber_block1 = type { %umber_header, [1 x i64] }

@"OpSectionRight.*binding.1" = global %umber_block* null
@string.451727690 = constant %umber_block8b { %umber_header { i16 -32764, i16 1, i32 0 }, [8 x i8] c"arg\00\00\00\00\04" }
@int.5 = constant %umber_block1 { %umber_header { i16 -32767, i16 1, i32 0 }, i64 5 }
@string.76039754 = constant %umber_block8b { %umber_header { i16 -32764, i16 1, i32 0 }, [8 x i8] c"between\00" }
@int.6 = constant %umber_block1 { %umber_header { i16 -32767, i16 1, i32 0 }, i64 6 }

define i32 @"umber_main:./examples/OpSectionRight.um"() {
entry:
  %fun_call = tail call tailcc %umber_block* @Std.Prelude.print(%umber_block* bitcast (%umber_block8b* @string.76039754 to %umber_block*))
  %fun_call1 = tail call tailcc %umber_block* @OpSectionRight.lambda.1(%umber_block* bitcast (%umber_block1* @int.6 to %umber_block*))
  %fun_call2 = tail call tailcc %umber_block* @"Std.Prelude.Operators.;"(%umber_block* %fun_call, %umber_block* %fun_call1)
  store %umber_block* %fun_call2, %umber_block** @"OpSectionRight.*binding.1", align 8
  ret i32 0
}

declare tailcc %umber_block* @Std.Prelude.print_int(%umber_block*)

declare tailcc %umber_block* @"Std.Prelude.Operators.+"(%umber_block*, %umber_block*)

define tailcc %umber_block* @"OpSectionRight.~+~"(%umber_block* %OpSectionRight.x.1, %umber_block* %OpSectionRight.y.1) {
entry:
  %fun_call = tail call tailcc %umber_block* @"Std.Prelude.Operators.+"(%umber_block* %OpSectionRight.x.1, %umber_block* %OpSectionRight.y.1)
  %fun_call1 = tail call tailcc %umber_block* @Std.Prelude.print_int(%umber_block* %fun_call)
  ret %umber_block* %fun_call1
}

declare tailcc %umber_block* @"Std.Prelude.Operators.;"(%umber_block*, %umber_block*)

declare tailcc %umber_block* @Std.Prelude.print(%umber_block*)

define tailcc %umber_block* @OpSectionRight.lambda.1(%umber_block* %OpSectionRight..1) {
entry:
  %fun_call = tail call tailcc %umber_block* @Std.Prelude.print(%umber_block* bitcast (%umber_block8b* @string.451727690 to %umber_block*))
  %fun_call1 = tail call tailcc %umber_block* @"Std.Prelude.Operators.;"(%umber_block* %fun_call, %umber_block* bitcast (%umber_block1* @int.5 to %umber_block*))
  %fun_call2 = tail call tailcc %umber_block* @"OpSectionRight.~+~"(%umber_block* %OpSectionRight..1, %umber_block* %fun_call1)
  ret %umber_block* %fun_call2
}


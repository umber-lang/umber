(Classics ()
 ((Let (rec_ true)
   (bindings
    (((Catch_all (fact))
      ((Lambda ((Catch_all ("")))
        (Match (Name Classics.) (Type_app Int ())
         (((Union (Constant (Int 0)) (Constant (Int 1))) (Literal (Int 1)))
          ((Catch_all (n))
           (Fun_call (Name Std.Prelude.Operators.*)
            (((Name Classics.n) (Type_app Int ()))
             ((Fun_call (Name Classics.fact)
               (((Fun_call (Name Std.Prelude.Operators.-)
                  (((Name Classics.n) (Type_app Int ()))
                   ((Literal (Int 1)) (Type_app Int ()))))
                 (Type_app Std.Prelude.Int ()))))
              (Type_app Std.Prelude.Int ()))))))))
       (Function ((Type_app Std.Prelude.Int ()))
        (Type_app Std.Prelude.Int ())))))))
  (Let (rec_ true)
   (bindings
    (((Catch_all (fib))
      ((Lambda ((Catch_all (n)))
        (Match (Name Classics.n) (Type_app Int ())
         (((Union (Constant (Int 0)) (Constant (Int 1))) (Literal (Int 1)))
          ((Catch_all (n))
           (Fun_call (Name Std.Prelude.Operators.+)
            (((Fun_call (Name Classics.fib)
               (((Fun_call (Name Std.Prelude.Operators.-)
                  (((Name Classics.n) (Type_app Int ()))
                   ((Literal (Int 1)) (Type_app Int ()))))
                 (Type_app Std.Prelude.Int ()))))
              (Type_app Std.Prelude.Int ()))
             ((Fun_call (Name Classics.fib)
               (((Fun_call (Name Std.Prelude.Operators.-)
                  (((Name Classics.n) (Type_app Int ()))
                   ((Literal (Int 2)) (Type_app Int ()))))
                 (Type_app Std.Prelude.Int ()))))
              (Type_app Std.Prelude.Int ()))))))))
       (Function ((Type_app Std.Prelude.Int ()))
        (Type_app Std.Prelude.Int ())))))))
  (Let (rec_ false)
   (bindings
    (((Tuple ())
      ((Fun_call (Name "Std.Prelude.Operators.;")
        (((Fun_call (Name "Std.Prelude.Operators.;")
           (((Fun_call (Name Std.Prelude.print)
              (((Literal (String "5! is:")) (Type_app String ()))))
             (Tuple ()))
            ((Fun_call (Name Std.Prelude.print_int)
              (((Fun_call (Name Classics.fact)
                 (((Literal (Int 5)) (Type_app Int ()))))
                (Type_app Std.Prelude.Int ()))))
             (Tuple ()))))
          (Tuple ()))
         ((Fun_call (Name Std.Prelude.print)
           (((Literal (String "")) (Type_app String ()))))
          (Tuple ()))))
       (Tuple ()))))))))

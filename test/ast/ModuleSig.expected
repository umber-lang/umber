(ModuleSig ()
 ((Module
   (Range
    ((Common_sig (Type_decl Range (() Abstract)))
     (Common_sig
      (Val between ()
       (()
        ((Function
          ((Type_app Std.Prelude.Int.Int ())
           (Type_app Std.Prelude.Int.Int ()))
          (Effect_union ()) (Type_app ModuleSig.Range.Range ()))
         ()))))
     (Common_sig
      (Val elem ()
       (()
        ((Function
          ((Type_app Std.Prelude.Int.Int ())
           (Type_app ModuleSig.Range.Range ()))
          (Effect_union ()) (Type_app Std.Prelude.Bool.Bool ()))
         ())))))
    ((Common_def
      (Type_decl Range
       (()
        (Alias
         (Tuple
          ((Type_app Std.Prelude.Int.Int ())
           (Type_app Std.Prelude.Int.Int ())))))))
     (Let (rec_ false)
      (bindings
       (((Catch_all (between))
         ((Lambda ((Catch_all (lo)) (Catch_all (hi)))
           (Tuple ((Name ModuleSig.Range.lo) (Name ModuleSig.Range.hi))))
          ((Function ((Var a) (Var b)) (Effect_union ())
            (Tuple ((Var a) (Var b))))
           ()))))))
     (Let (rec_ false)
      (bindings
       (((Catch_all (elem))
         ((Lambda
           ((Catch_all (x)) (Tuple ((Catch_all (lo)) (Catch_all (hi)))))
           (Fun_call (Name Std.Prelude.Operators.&&)
            ((Function
              ((Type_app Std.Prelude.Bool.Bool ())
               (Type_app Std.Prelude.Bool.Bool ()))
              (Effect_union ()) (Type_app Std.Prelude.Bool.Bool ()))
             ())
            (((Fun_call (Name Std.Prelude.Operators.<=)
               ((Function ((Var a) (Var a)) (Effect_union ())
                 (Type_app Std.Prelude.Bool.Bool ()))
                ())
               (((Name ModuleSig.Range.lo) ((Union ()) ()))
                ((Name ModuleSig.Range.x) ((Union ()) ()))))
              ((Type_app Std.Prelude.Bool.Bool ()) ()))
             ((Fun_call (Name Std.Prelude.Operators.<=)
               ((Function ((Var a) (Var a)) (Effect_union ())
                 (Type_app Std.Prelude.Bool.Bool ()))
                ())
               (((Name ModuleSig.Range.x) ((Union ()) ()))
                ((Name ModuleSig.Range.hi) ((Union ()) ()))))
              ((Type_app Std.Prelude.Bool.Bool ()) ())))))
          ((Function
            ((Intersection ((Var a) (Var b))) (Tuple ((Var b) (Var a))))
            (Effect_union ()) (Type_app Std.Prelude.Bool.Bool ()))
           ())))))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (my_range))
      ((Fun_call (Name ModuleSig.Range.between)
        ((Function
          ((Type_app Std.Prelude.Int.Int ())
           (Type_app Std.Prelude.Int.Int ()))
          (Effect_union ()) (Type_app ModuleSig.Range.Range ()))
         ())
        (((Literal (Int 1)) ((Type_app Int ()) ()))
         ((Literal (Int 10)) ((Type_app Int ()) ()))))
       ((Type_app ModuleSig.Range.Range ()) ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (is_10_in_range))
      ((Fun_call (Name ModuleSig.Range.elem)
        ((Function
          ((Type_app Std.Prelude.Int.Int ())
           (Type_app ModuleSig.Range.Range ()))
          (Effect_union ()) (Type_app Std.Prelude.Bool.Bool ()))
         ())
        (((Literal (Int 10)) ((Type_app Int ()) ()))
         ((Name ModuleSig.my_range) ((Type_app ModuleSig.Range.Range ()) ()))))
       ((Type_app Std.Prelude.Bool.Bool ()) ()))))))
  (Let (rec_ false)
   (bindings
    (((Tuple ())
      ((Fun_call (Name "Std.Prelude.Operators.;")
        ((Function ((Tuple ()) (Tuple ())) (Effect_union ()) (Tuple ())) ())
        (((Fun_call (Name Std.Prelude.print_bool)
           ((Function ((Type_app Std.Prelude.Bool.Bool ())) (Effect_union ())
             (Tuple ()))
            ())
           (((Name ModuleSig.is_10_in_range)
             ((Type_app Std.Prelude.Bool.Bool ()) ()))))
          ((Tuple ()) ()))
         ((Fun_call (Name Std.Prelude.print)
           ((Function ((Type_app String ())) (Effect_union ()) (Tuple ()))
            ())
           (((Literal (String "")) ((Type_app String ()) ()))))
          ((Tuple ()) ()))))
       ((Tuple ()) ()))))))))

let source : String = "everything depends on me"

module A = {
  let a : () -> Never = \() -> b () : Never
  and b : () -> Never = \() -> a () : Never
  
  let print : String -> () = Std.Prelude.print
  
  let print_source : () -> () = \() -> print source
}

let print_source : () -> () =
  \() ->
    A.print_source ();
    print source

let empty : List Never = Nil

let count_up : Int, Int, Int -> Int =
  \start_at count_by end_after ->
    let loop : Int -> Int =
      \current ->
        (match current < end_after : Bool
        | True -> loop (current + count_by : Int)
        | False -> current)
          : Int
    in
    loop start_at : Int

let () = print_int (count_up 0 2 5 : Int)

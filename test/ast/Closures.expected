(Closures ()
 ((Let (rec_ false)
   (bindings
    (((Catch_all (count_up))
      ((Lambda
        ((Catch_all (start_at)) (Catch_all (count_by))
         (Catch_all (end_after)))
        (Let
         ((rec_ true)
          (bindings
           ((((Catch_all (loop))
              (Function ((Type_app Std.Prelude.Int ()))
               (Type_app Std.Prelude.Int ())))
             (Lambda ((Catch_all (current)))
              (Match
               (Fun_call (Name Std.Prelude.Operators.<)
                (((Name Closures.current) (Type_app Std.Prelude.Int ()))
                 ((Name Closures.end_after) (Type_app Std.Prelude.Int ()))))
               (Type_app Bool ())
               (((Cnstr_appl True ())
                 (Fun_call (Name Closures.loop)
                  (((Fun_call (Name Std.Prelude.Operators.+)
                     (((Name Closures.current) (Type_app Std.Prelude.Int ()))
                      ((Name Closures.count_by)
                       (Type_app Std.Prelude.Int ()))))
                    (Type_app Std.Prelude.Int ())))))
                ((Cnstr_appl False ()) (Name Closures.current))))))))
          (body
           (Fun_call (Name Closures.loop)
            (((Name Closures.start_at) (Type_app Std.Prelude.Int ()))))))))
       (Function
        ((Type_app Std.Prelude.Int ()) (Type_app Std.Prelude.Int ())
         (Type_app Std.Prelude.Int ()))
        (Type_app Std.Prelude.Int ())))))))))

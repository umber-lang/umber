(Functions ()
 ((Let (rec_ false)
   (bindings
    (((Catch_all (id))
      ((Lambda ((Catch_all (x))) (Name Functions.x))
       ((Function ((Var a)) (Effect_union ()) (Var a)) ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (zero)) ((Literal (Float 0)) ((Type_app Float ()) ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (still_zero_wow))
      ((Fun_call (Name Functions.id)
        ((Function ((Type_app Float ())) (Effect_union ())
          (Type_app Float ()))
         ())
        (((Name Functions.zero) ((Type_app Float ()) ()))))
       ((Type_app Float ()) ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (sqr))
      ((Lambda ((Catch_all (x)))
        (Fun_call (Name Std.Prelude.Operators.*)
         ((Function
           ((Type_app Std.Prelude.Int.Int ())
            (Type_app Std.Prelude.Int.Int ()))
           (Effect_union ()) (Type_app Std.Prelude.Int.Int ()))
          ())
         (((Name Functions.x) ((Type_app Std.Prelude.Int.Int ()) ()))
          ((Name Functions.x) ((Type_app Std.Prelude.Int.Int ()) ())))))
       ((Function ((Type_app Std.Prelude.Int.Int ())) (Effect_union ())
         (Type_app Std.Prelude.Int.Int ()))
        ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (lots_of_args))
      ((Lambda
        ((Catch_all (a)) (Catch_all (b)) (Catch_all (c)) (Catch_all (d))
         (Catch_all (e)))
        (Tuple ()))
       ((Function
         ((Intersection ()) (Intersection ()) (Intersection ())
          (Intersection ()) (Intersection ()))
         (Effect_union ()) (Tuple ()))
        ()))))))
  (Let (rec_ false)
   (bindings
    (((Tuple ())
      ((Fun_call (Name Functions.lots_of_args)
        ((Function
          ((Type_app Int ()) (Type_app Float ()) (Type_app Int ())
           (Type_app String ()) (Type_app Char ()))
          (Effect_union ()) (Tuple ()))
         ())
        (((Literal (Int 5)) ((Type_app Int ()) ()))
         ((Literal (Float 10000000000000)) ((Type_app Float ()) ()))
         ((Literal (Int -89)) ((Type_app Int ()) ()))
         ((Literal (String huh)) ((Type_app String ()) ()))
         ((Literal (Char c)) ((Type_app Char ()) ()))))
       ((Tuple ()) ()))))))))

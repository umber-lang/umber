let (:/) : String, String -> () =
  \x y -> print ((x ++ " is mid. I prefer " : String) ++ y : String)

let apply : (String, a -> <b> c) -> (a -> <b> c) =
  \f ->
    ((print "called apply";
    "lasagna"
      : String)
      :f:)

let () =
  let' g : String -> <a> () = apply (:/) in
  print "between";
  g "penne"

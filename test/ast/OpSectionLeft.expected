(OpSectionLeft ()
 ((Let (rec_ false)
   (bindings
    (((Catch_all (:/))
      ((Lambda ((Catch_all (x)) (Catch_all (y)))
        (Fun_call (Name Std.Prelude.print)
         ((Function ((Type_app String ())) (Effect_union ()) (Tuple ())) ())
         (((Fun_call (Name Std.Prelude.Operators.++)
            ((Function ((Type_app String ()) (Type_app String ()))
              (Effect_union ()) (Type_app String ()))
             ())
            (((Fun_call (Name Std.Prelude.Operators.++)
               ((Function ((Type_app String ()) (Type_app String ()))
                 (Effect_union ()) (Type_app String ()))
                ())
               (((Name OpSectionLeft.x) ((Type_app String ()) ()))
                ((Literal (String " is mid. I prefer "))
                 ((Type_app String ()) ()))))
              ((Type_app String ()) ()))
             ((Name OpSectionLeft.y) ((Type_app String ()) ()))))
           ((Type_app String ()) ())))))
       ((Function ((Type_app String ()) (Type_app String ()))
         (Effect_union ()) (Tuple ()))
        ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (apply))
      ((Lambda ((Catch_all (f)))
        (Let
         ((rec_ false)
          (bindings
           ((((Catch_all (*arg0)) ((Type_app String ()) ()))
             (Fun_call (Name "Std.Prelude.Operators.;")
              ((Function ((Tuple ()) (Type_app String ())) (Effect_union ())
                (Type_app String ()))
               ())
              (((Fun_call (Name Std.Prelude.print)
                 ((Function ((Type_app String ())) (Effect_union ())
                   (Tuple ()))
                  ())
                 (((Literal (String "called apply"))
                   ((Type_app String ()) ()))))
                ((Tuple ()) ()))
               ((Literal (String lasagna)) ((Type_app String ()) ())))))))
          (body
           (Lambda ((Catch_all (*arg1)))
            (Fun_call (Name OpSectionLeft.f)
             ((Function ((Type_app String ()) (Var a)) (Effect_union ())
               (Var c))
              ())
             (((Name OpSectionLeft.*arg0) ((Type_app String ()) ()))
              ((Name OpSectionLeft.*arg1) ((Var a) ())))))))))
       ((Function
         ((Function ((Type_app String ()) (Var a)) (Effect_var b) (Var c)))
         (Effect_union ()) (Function ((Var a)) (Effect_var b) (Var c)))
        ()))))))
  (Let (rec_ false)
   (bindings
    (((Tuple ())
      ((Let
        ((rec_ false)
         (bindings
          ((((Catch_all (g))
             ((Function ((Type_app String ())) (Effect_union ()) (Tuple ()))
              ()))
            (Fun_call (Name OpSectionLeft.apply)
             ((Function
               ((Function ((Type_app String ()) (Type_app String ()))
                 (Effect_intersection ()) (Tuple ())))
               (Effect_union ())
               (Function ((Type_app String ())) (Effect_union ()) (Tuple ())))
              ())
             (((Name OpSectionLeft.:/)
               ((Function ((Type_app String ()) (Type_app String ()))
                 (Effect_union ()) (Tuple ()))
                ())))))))
         (body
          (Fun_call (Name "Std.Prelude.Operators.;")
           ((Function ((Tuple ()) (Tuple ())) (Effect_union ()) (Tuple ()))
            ())
           (((Fun_call (Name Std.Prelude.print)
              ((Function ((Type_app String ())) (Effect_union ()) (Tuple ()))
               ())
              (((Literal (String between)) ((Type_app String ()) ()))))
             ((Tuple ()) ()))
            ((Fun_call (Name OpSectionLeft.g)
              ((Function ((Type_app String ())) (Effect_union ()) (Tuple ()))
               ())
              (((Literal (String penne)) ((Type_app String ()) ()))))
             ((Tuple ()) ())))))))
       ((Tuple ()) ()))))))))

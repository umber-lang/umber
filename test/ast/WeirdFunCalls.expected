(WeirdFunCalls ()
 ((Let (rec_ false)
   (bindings
    (((Tuple ())
      ((Fun_call (Name Std.Prelude.print)
        (Function ((Type_app String ())) (Tuple ()))
        (((Literal (String plain)) (Type_app String ()))))
       (Tuple ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (fun_call))
      ((Lambda ((Tuple ()))
        (Lambda ((Tuple ()))
         (Fun_call (Name Std.Prelude.print)
          (Function ((Type_app String ())) (Tuple ()))
          (((Literal (String "fun call")) (Type_app String ()))))))
       (Function ((Tuple ())) (Function ((Tuple ())) (Tuple ()))))))))
  (Let (rec_ false)
   (bindings
    (((Tuple ())
      ((Fun_call
        (Fun_call (Name WeirdFunCalls.fun_call)
         (Function ((Tuple ())) (Function ((Tuple ())) (Tuple ())))
         (((Tuple ()) (Tuple ()))))
        (Function ((Tuple ())) (Tuple ())) (((Tuple ()) (Tuple ()))))
       (Tuple ()))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (print_twice))
      ((Lambda ((Catch_all (msg)))
        (Fun_call (Name "Std.Prelude.Operators.;")
         (Function ((Tuple ()) (Tuple ())) (Tuple ()))
         (((Fun_call (Name Std.Prelude.print)
            (Function ((Type_app String ())) (Tuple ()))
            (((Name WeirdFunCalls.msg) (Type_app String ()))))
           (Tuple ()))
          ((Fun_call (Name Std.Prelude.print)
            (Function ((Type_app String ())) (Tuple ()))
            (((Name WeirdFunCalls.msg) (Type_app String ()))))
           (Tuple ())))))
       (Function ((Type_app String ())) (Tuple ())))))))
  (Let (rec_ false)
   (bindings
    (((Catch_all (if_))
      ((Fun_call
        (Match (Name True) (Type_app Bool ())
         (((Cnstr_appl True ()) (Name WeirdFunCalls.print_twice))
          ((Cnstr_appl False ()) (Name Std.Prelude.print))))
        (Function ((Type_app String ())) (Tuple ()))
        (((Literal (String if)) (Type_app String ()))))
       (Tuple ()))))))
  (Let (rec_ false)
   (bindings
    (((Tuple ())
      ((Fun_call
        (Let
         ((rec_ false) (bindings ((((Tuple ()) (Tuple ())) (Tuple ()))))
          (body (Name Std.Prelude.print))))
        (Function ((Type_app String ())) (Tuple ()))
        (((Literal (String let)) (Type_app String ()))))
       (Tuple ()))))))))

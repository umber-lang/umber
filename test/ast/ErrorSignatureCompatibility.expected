("Compilation error"
 ((kind Type_error)
  (msg
   ("The signature of this module does not match its definition"
    (module_name ErrorSignatureCompatibility)
    ((name_diff
      ((double'
        (Incompatible
         ((type_
           (Scheme
            ((Function ((Type_app String ())) (Effect_union ())
              (Type_app String ()))
             ()))))
         ((type_
           (Scheme
            ((Function ((Type_app ErrorSignatureCompatibility.A.Int ()))
              (Effect_union ())
              (Type_app ErrorSignatureCompatibility.A.Int ()))
             ())))
          (type_source Let_inferred))))
       (plus_one
        (Incompatible
         ((type_
           (Scheme ((Function ((Var a)) (Effect_union ()) (Var a)) ()))))
         ((type_
           (Scheme
            ((Function ((Type_app Std.Prelude.Int.Int ())) (Effect_union ())
              (Type_app Std.Prelude.Int.Int ()))
             ())))
          (type_source Let_inferred))))
       (plus_one'
        (Incompatible
         ((type_
           (Scheme
            ((Function ((Type_app Std.Prelude.Int.Int ())) (Effect_union ())
              (Type_app Std.Prelude.Int.Int ()))
             ()))))
         ((type_
           (Scheme
            ((Function ((Type_app ErrorSignatureCompatibility.A.Int ()))
              (Effect_union ())
              (Type_app ErrorSignatureCompatibility.A.Int ()))
             ())))
          (type_source Let_inferred))))))
     (type_diff
      ((Tuple
        (Incompatible ((a b) (Alias (Tuple ((Var a) (Var b)))))
         ((a b) (Alias (Tuple ((Var a) (Var a)))))))
       (InconsistentVarUse
        (Incompatible
         ((a b)
          (Variants ((Foo ((Function ((Var a)) (Effect_union ()) (Var b)))))))
         ((a b)
          (Variants ((Foo ((Function ((Var b)) (Effect_union ()) (Var a)))))))))))
     (module_diff
      ((A
        (Module_diff
         ((type_diff
           ((Number
             (Incompatible
              (()
               (Variants
                ((Int ((Type_app Std.Prelude.Int.Int ())))
                 (Float ((Type_app Std.Prelude.Float.Float ()))))))
              (()
               (Variants
                ((Int ((Type_app ErrorSignatureCompatibility.A.Int ())))
                 (Float ((Type_app ErrorSignatureCompatibility.A.Float ()))))))))))))))))))
  (filename ErrorSignatureCompatibility.um)))

((Fun_def
  ((fun_name Classics.fact.0) (closed_over ()) (args (.0))
   (body
    (Catch (label 0)
     (body
      (If (cond (Equals (Name .0) (Int 0))) (then_ (Break 0))
       (else_
        (If (cond (Equals (Name .0) (Int 1))) (then_ (Break 0))
         (else_
          (Catch (label 1) (body (Let Classics.n.0 (Name .0) (Break 1)))
           (with_
            (Fun_call Std.Prelude.Operators.*.0
             ((Name Classics.n.0)
              (Fun_call Classics.fact.0
               ((Fun_call Std.Prelude.Operators.-.0
                 ((Name Classics.n.0) (Primitive (Int 1)))))))))))))))
     (with_ (Primitive (Int 1)))))))
 (Fun_def
  ((fun_name Classics.fib.0) (closed_over ()) (args (Classics.n.1))
   (body
    (Catch (label 0)
     (body
      (If (cond (Equals (Name Classics.n.1) (Int 0))) (then_ (Break 0))
       (else_
        (If (cond (Equals (Name Classics.n.1) (Int 1))) (then_ (Break 0))
         (else_
          (Catch (label 1)
           (body (Let Classics.n.2 (Name Classics.n.1) (Break 1)))
           (with_
            (Fun_call Std.Prelude.Operators.+.0
             ((Fun_call Classics.fib.0
               ((Fun_call Std.Prelude.Operators.-.0
                 ((Name Classics.n.2) (Primitive (Int 1))))))
              (Fun_call Classics.fib.0
               ((Fun_call Std.Prelude.Operators.-.0
                 ((Name Classics.n.2) (Primitive (Int 2)))))))))))))))
     (with_ (Primitive (Int 1))))))))

((Fun_def
  ((fun_name ModuleSig.Range.between.0) (closed_over ())
   (args (ModuleSig.Range.lo.0 ModuleSig.Range.hi.0))
   (body
    (Make_block (tag 0)
     (fields ((Name ModuleSig.Range.lo.0) (Name ModuleSig.Range.hi.0)))))))
 (Fun_def
  ((fun_name ModuleSig.Range.in.0) (closed_over ())
   (args (ModuleSig.Range.x.0 *lambda_arg.0))
   (body
    (Let ModuleSig.Range.lo.1 (Get_block_field 0 (Name *lambda_arg.0))
     (Let ModuleSig.Range.hi.1 (Get_block_field 1 (Name *lambda_arg.0))
      (Fun_call Std.Prelude.Operators.&&.0
       ((Fun_call Std.Prelude.Operators.<=.0
         ((Name ModuleSig.Range.lo.1) (Name ModuleSig.Range.x.0)))
        (Fun_call Std.Prelude.Operators.<=.0
         ((Name ModuleSig.Range.x.0) (Name ModuleSig.Range.hi.1))))))))))
 (Value_def ModuleSig.my_range.0
  (Fun_call ModuleSig.Range.between.0
   ((Primitive (Int 1)) (Primitive (Int 10)))))
 (Value_def ModuleSig.is_10_in_range.0
  (Fun_call ModuleSig.Range.in.0
   ((Primitive (Int 10)) (Name ModuleSig.my_range.0)))))

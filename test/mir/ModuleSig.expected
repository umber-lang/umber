((Fun_def
  ((fun_name ModuleSig.Range.between)
   (args (ModuleSig.Range.lo ModuleSig.Range.hi))
   (body
    (Make_block (tag 0)
     (fields ((Name ModuleSig.Range.lo) (Name ModuleSig.Range.hi)))))))
 (Extern_decl ((name Std.Prelude.Operators.&&) (arity 2)))
 (Extern_decl ((name umber_lte) (arity 2)))
 (Fun_def
  ((fun_name ModuleSig.Range.elem) (args (ModuleSig.Range.x *lambda_arg))
   (body
    (Let ModuleSig.Range.lo.1 (Get_block_field 0 (Name *lambda_arg))
     (Let ModuleSig.Range.hi.1 (Get_block_field 1 (Name *lambda_arg))
      (Fun_call Std.Prelude.Operators.&&
       ((Fun_call umber_lte
         ((Name ModuleSig.Range.lo.1) (Name ModuleSig.Range.x)))
        (Fun_call umber_lte
         ((Name ModuleSig.Range.x) (Name ModuleSig.Range.hi.1))))))))))
 (Value_def ModuleSig.my_range
  (Fun_call ModuleSig.Range.between
   ((Primitive (Int 1)) (Primitive (Int 10)))))
 (Value_def ModuleSig.is_10_in_range
  (Fun_call ModuleSig.Range.elem
   ((Primitive (Int 10)) (Name ModuleSig.my_range))))
 (Extern_decl ((name "Std.Prelude.Operators.;") (arity 2)))
 (Extern_decl ((name umber_print_bool) (arity 1)))
 (Extern_decl ((name umber_print_endline) (arity 1)))
 (Value_def *binding
  (Fun_call "Std.Prelude.Operators.;"
   ((Fun_call umber_print_bool ((Name ModuleSig.is_10_in_range)))
    (Fun_call umber_print_endline ((Primitive (String ""))))))))

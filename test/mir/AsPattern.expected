((Value_def AsPattern.pair.0
  (Make_block (tag 0) (fields ((Primitive (Int 1)) (Primitive (Int 2))))))
 (Value_def AsPattern.one.0 (Get_block_field 0 (Name AsPattern.pair.0)))
 (Value_def AsPattern.two.0 (Get_block_field 1 (Name AsPattern.pair.0)))
 (Extern_decl ((name "Std.Prelude.Operators.;.0") (arity 2)))
 (Extern_decl ((name Std.Prelude.Operators.::.0) (arity 2)))
 (Fun_def
  ((fun_name AsPattern.iter_pairs.0) (closed_over ())
   (args (AsPattern.f.0 AsPattern.lst.0))
   (body
    (Cond_assign
     (conds
      (((Constant_tag_equals (Name AsPattern.lst.0) 0) ())
       ((And (Non_constant_tag_equals (Name AsPattern.lst.0) 0)
         (Constant_tag_equals (Get_block_field 1 (Name AsPattern.lst.0)) 0))
        ())))
     (body (Make_block (tag 0)))
     (if_none_matched
      (Otherwise
       (Let AsPattern.rest.0
        (Get_block_field 1 (Get_block_field 1 (Name AsPattern.lst.0)))
        (Let AsPattern.b.0
         (Get_block_field 0 (Get_block_field 1 (Name AsPattern.lst.0)))
         (Let AsPattern.a.0 (Get_block_field 0 (Name AsPattern.lst.0))
          (Fun_call "Std.Prelude.Operators.;.0"
           ((Fun_call AsPattern.f.0
             ((Name AsPattern.a.0) (Name AsPattern.b.0)))
            (Fun_call AsPattern.iter_pairs.0
             ((Name AsPattern.f.0)
              (Fun_call Std.Prelude.Operators.::.0
               ((Name AsPattern.b.0) (Name AsPattern.rest.0)))))))))))))))))

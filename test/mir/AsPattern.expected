((Value_def AsPattern.pair
  (Make_block (tag 0) (fields ((Primitive (Int 1)) (Primitive (Int 2))))))
 (Value_def AsPattern.one (Get_block_field 0 (Name AsPattern.pair)))
 (Value_def AsPattern.two (Get_block_field 1 (Name AsPattern.pair)))
 (Extern_decl ((name "Std.Prelude.Operators.;") (arity 2)))
 (Extern_decl ((name Std.Prelude.Operators.::) (arity 2)))
 (Fun_def
  ((fun_name AsPattern.iter_pairs) (args (AsPattern.f AsPattern.lst))
   (body
    (Cond_assign
     (conds
      (((Constant_tag_equals (Name AsPattern.lst) 0) ())
       ((And (Non_constant_tag_equals (Name AsPattern.lst) 0)
         (Constant_tag_equals (Get_block_field 1 (Name AsPattern.lst)) 0))
        ())))
     (body (Make_block (tag 0)))
     (if_none_matched
      (Otherwise
       (Let AsPattern.rest
        (Get_block_field 1 (Get_block_field 1 (Name AsPattern.lst)))
        (Let AsPattern.b
         (Get_block_field 0 (Get_block_field 1 (Name AsPattern.lst)))
         (Let AsPattern.a (Get_block_field 0 (Name AsPattern.lst))
          (Fun_call "Std.Prelude.Operators.;"
           ((Fun_call AsPattern.f ((Name AsPattern.a) (Name AsPattern.b)))
            (Fun_call AsPattern.iter_pairs
             ((Name AsPattern.f)
              (Fun_call Std.Prelude.Operators.::
               ((Name AsPattern.b) (Name AsPattern.rest)))))))))))))))))

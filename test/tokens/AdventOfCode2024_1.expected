LET
(LOWER_NAME sum)
(LOWER_NAME xs)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME fold)
(LOWER_NAME xs)
(INT 0)
L_PAREN
(OPERATOR +)
R_PAREN
LET
(LOWER_NAME solve)
(LOWER_NAME input)
EQUALS
LET
L_PAREN
(LOWER_NAME nums1)
COMMA
(LOWER_NAME nums2)
R_PAREN
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME unzip)
(LOWER_NAME input)
IN
LET
(LOWER_NAME nums1)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME sort)
(LOWER_NAME nums1)
IN
LET
(LOWER_NAME nums2)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME sort)
(LOWER_NAME nums2)
IN
LET
(LOWER_NAME distances)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME map)
L_PAREN
(UPPER_NAME List)
PERIOD
(LOWER_NAME zip_shortest)
(LOWER_NAME nums1)
(LOWER_NAME nums2)
R_PAREN
L_PAREN
BACKSLASH
L_PAREN
(LOWER_NAME x)
COMMA
(LOWER_NAME y)
R_PAREN
ARROW
(UPPER_NAME Int)
PERIOD
(LOWER_NAME abs)
L_PAREN
(LOWER_NAME x)
(OPERATOR -)
(LOWER_NAME y)
R_PAREN
R_PAREN
IN
(LOWER_NAME sum)
(LOWER_NAME distances)
EOF

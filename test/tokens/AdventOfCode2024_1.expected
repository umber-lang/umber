LET
(LOWER_NAME sum)
(LOWER_NAME xs)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME fold)
(LOWER_NAME xs)
(INT 0)
L_PAREN
(OPERATOR +)
R_PAREN
LET
(LOWER_NAME solve_part_1)
(LOWER_NAME input)
EQUALS
LET
L_PAREN
(LOWER_NAME nums1)
COMMA
(LOWER_NAME nums2)
R_PAREN
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME unzip)
(LOWER_NAME input)
IN
LET_NONREC
(LOWER_NAME nums1)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME sort)
(LOWER_NAME nums1)
IN
LET_NONREC
(LOWER_NAME nums2)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME sort)
(LOWER_NAME nums2)
IN
LET
(LOWER_NAME distances)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME map)
L_PAREN
(UPPER_NAME List)
PERIOD
(LOWER_NAME zip_shortest)
(LOWER_NAME nums1)
(LOWER_NAME nums2)
R_PAREN
L_PAREN
BACKSLASH
L_PAREN
(LOWER_NAME x)
COMMA
(LOWER_NAME y)
R_PAREN
ARROW
(UPPER_NAME Int)
PERIOD
(LOWER_NAME abs)
L_PAREN
(LOWER_NAME x)
(OPERATOR -)
(LOWER_NAME y)
R_PAREN
R_PAREN
IN
(LOWER_NAME sum)
(LOWER_NAME distances)
LET
(LOWER_NAME solve_part_2)
(LOWER_NAME input)
EQUALS
LET
L_PAREN
(LOWER_NAME left_nums)
COMMA
(LOWER_NAME right_nums)
R_PAREN
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME unzip)
(LOWER_NAME input)
IN
(UPPER_NAME List)
PERIOD
(LOWER_NAME fold)
(LOWER_NAME left_nums)
(INT 0)
L_PAREN
BACKSLASH
(LOWER_NAME acc)
(LOWER_NAME x)
ARROW
(LOWER_NAME acc)
(OPERATOR +)
(LOWER_NAME x)
(OPERATOR *)
(UPPER_NAME List)
PERIOD
(LOWER_NAME count)
(LOWER_NAME right_nums)
L_PAREN
(OPERATOR ==)
(LOWER_NAME x)
R_PAREN
R_PAREN
LET
L_PAREN
R_PAREN
EQUALS
(LOWER_NAME print_string)
(STRING "Part 1: ")
(OPERATOR ";")
(LOWER_NAME print_int)
L_PAREN
(LOWER_NAME solve_part_1)
(LOWER_NAME input)
R_PAREN
(OPERATOR ";")
(LOWER_NAME print_string)
(STRING  "\
        \nPart 2: ")
(OPERATOR ";")
(LOWER_NAME print_int)
L_PAREN
(LOWER_NAME solve_part_2)
(LOWER_NAME input)
R_PAREN
(OPERATOR ";")
(LOWER_NAME print)
(STRING "")
LET
(LOWER_NAME input)
EQUALS
LET
(LOWER_NAME loop)
(LOWER_NAME acc)
EQUALS
MATCH
(LOWER_NAME read_line)
L_PAREN
R_PAREN
PIPE
(UPPER_NAME None)
ARROW
(UPPER_NAME List)
PERIOD
(LOWER_NAME reverse)
(LOWER_NAME acc)
PIPE
(UPPER_NAME Some)
(LOWER_NAME line)
ARROW
LET
(LOWER_NAME nums)
EQUALS
(UPPER_NAME List)
PERIOD
(LOWER_NAME map)
L_PAREN
(UPPER_NAME List)
PERIOD
(LOWER_NAME filter)
L_PAREN
(UPPER_NAME String)
PERIOD
(LOWER_NAME split)
(LOWER_NAME line)
(CHAR " ")
R_PAREN
L_PAREN
(LOWER_NAME not)
(OPERATOR .)
(UPPER_NAME String)
PERIOD
(LOWER_NAME is_empty)
R_PAREN
R_PAREN
(UPPER_NAME Int)
PERIOD
(LOWER_NAME of_string)
IN
MATCH
(LOWER_NAME nums)
PIPE
(UPPER_NAME Cons)
(LOWER_NAME x)
L_PAREN
(UPPER_NAME Cons)
(LOWER_NAME y)
(UPPER_NAME Nil)
R_PAREN
ARROW
(LOWER_NAME loop)
L_PAREN
L_PAREN
(LOWER_NAME x)
COMMA
(LOWER_NAME y)
R_PAREN
(OPERATOR ::)
(LOWER_NAME acc)
R_PAREN
PIPE
UNDERSCORE
ARROW
L_BRACKET
R_BRACKET
IN
(LOWER_NAME loop)
L_BRACKET
R_BRACKET
EOF

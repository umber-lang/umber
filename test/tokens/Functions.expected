LET
(LOWER_NAME id)
EQUALS
BACKSLASH
(LOWER_NAME x)
ARROW
(LOWER_NAME x)
LET
(LOWER_NAME zero)
EQUALS
(FLOAT 0)
LET
(LOWER_NAME still_zero_wow)
EQUALS
(LOWER_NAME id)
(LOWER_NAME zero)
LET
(LOWER_NAME sqr)
(LOWER_NAME x)
EQUALS
(LOWER_NAME x)
(OPERATOR *)
(LOWER_NAME x)
LET
(LOWER_NAME lots_of_args)
(LOWER_NAME a)
(LOWER_NAME b)
(LOWER_NAME c)
(LOWER_NAME d)
(LOWER_NAME e)
EQUALS
L_PAREN
R_PAREN
LET
L_PAREN
R_PAREN
EQUALS
(LOWER_NAME lots_of_args)
(INT 5)
(FLOAT 10000000000000)
(INT -89)
(STRING huh)
(CHAR c)
LET
(LOWER_NAME _trailing_lambda)
EQUALS
(LOWER_NAME lots_of_args)
(INT 1)
(INT 2)
(INT 3)
(INT 4)
L_PAREN
BACKSLASH
UNDERSCORE
UNDERSCORE
UNDERSCORE
ARROW
L_PAREN
R_PAREN
(OPERATOR ";")
(LOWER_NAME sqr)
(INT 9999)
R_PAREN
EOF

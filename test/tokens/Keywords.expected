LET
(LOWER_NAME let's_go)
L_PAREN
R_PAREN
EQUALS
LET_NONREC
(LOWER_NAME let's_go)
EQUALS
(LOWER_NAME let's_go)
IN
(LOWER_NAME let's_go)
L_PAREN
R_PAREN
LET
INFIXL
(INT 0)
(LOWER_NAME left)
EQUALS
L_PAREN
R_PAREN
LET
INFIXR
(INT 1)
(LOWER_NAME right)
EQUALS
L_PAREN
R_PAREN
LET
INFIX
(INT 9)
(LOWER_NAME middle)
EQUALS
L_PAREN
R_PAREN
LET
INFIXL
(INT 2)
L_PAREN
(OPERATOR ++?)
R_PAREN
EQUALS
L_PAREN
R_PAREN
LET
INFIXR
(INT 3)
L_PAREN
(OPERATOR -->)
R_PAREN
EQUALS
L_PAREN
R_PAREN
LET
INFIX
(INT 4)
L_PAREN
(OPERATOR ***)
R_PAREN
EQUALS
L_PAREN
R_PAREN
EOF

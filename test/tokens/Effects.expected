EFFECT
(UPPER_NAME Read)
EQUALS
L_BRACE
VAL
(LOWER_NAME ask)
COLON_SPACED
L_PAREN
R_PAREN
ARROW
(UPPER_NAME Int)
R_BRACE
VAL
(LOWER_NAME read)
COLON_SPACED
L_PAREN
R_PAREN
ARROW
LESS_THAN
(UPPER_NAME Read)
GREATER_THAN
(UPPER_NAME Int)
LET
(LOWER_NAME read)
EQUALS
(LOWER_NAME ask)
LET
(LOWER_NAME read_and_add)
L_PAREN
R_PAREN
EQUALS
(LOWER_NAME ask)
L_PAREN
R_PAREN
(OPERATOR +)
(LOWER_NAME ask)
L_PAREN
R_PAREN
LET
(LOWER_NAME run_both)
(LOWER_NAME f)
(LOWER_NAME g)
(LOWER_NAME x)
EQUALS
L_PAREN
(LOWER_NAME f)
(LOWER_NAME x)
COMMA
(LOWER_NAME g)
(LOWER_NAME x)
R_PAREN
LET
(LOWER_NAME foo)
L_PAREN
R_PAREN
EQUALS
(LOWER_NAME run_both)
L_PAREN
BACKSLASH
(LOWER_NAME x)
ARROW
(LOWER_NAME x)
(OPERATOR +)
(LOWER_NAME read_and_add)
L_PAREN
R_PAREN
R_PAREN
(LOWER_NAME print_int)
(INT 5)
LET
UNDERSCORE
EQUALS
HANDLE
(INT 5)
PIPE
LESS_THAN
(LOWER_NAME ask)
L_PAREN
R_PAREN
GREATER_THAN
ARROW
(INT 6)
LET
UNDERSCORE
EQUALS
HANDLE
(LOWER_NAME read_and_add)
L_PAREN
R_PAREN
PIPE
LESS_THAN
(LOWER_NAME ask)
L_PAREN
R_PAREN
GREATER_THAN
ARROW
RESUME
(INT 1)
LET
(LOWER_NAME _value_branch)
EQUALS
HANDLE
(LOWER_NAME foo)
L_PAREN
R_PAREN
PIPE
L_PAREN
(LOWER_NAME x)
COMMA
L_PAREN
R_PAREN
R_PAREN
ARROW
(LOWER_NAME x)
PIPE
LESS_THAN
(LOWER_NAME ask)
L_PAREN
R_PAREN
GREATER_THAN
ARROW
RESUME
(INT 0)
LET
(LOWER_NAME _nested_handler)
EQUALS
HANDLE
L_PAREN
HANDLE
(LOWER_NAME ask)
L_PAREN
R_PAREN
PIPE
(LOWER_NAME x)
ARROW
(LOWER_NAME x)
(OPERATOR +)
(INT 1)
PIPE
LESS_THAN
(LOWER_NAME ask)
L_PAREN
R_PAREN
GREATER_THAN
ARROW
RESUME
(INT 5)
R_PAREN
PIPE
LESS_THAN
(LOWER_NAME ask)
L_PAREN
R_PAREN
GREATER_THAN
ARROW
RESUME
(INT 7)
LET
(LOWER_NAME higher_order_handler)
(LOWER_NAME f)
EQUALS
HANDLE
(LOWER_NAME f)
L_PAREN
R_PAREN
PIPE
LESS_THAN
(LOWER_NAME ask)
L_PAREN
R_PAREN
GREATER_THAN
ARROW
L_PAREN
R_PAREN
LET
UNDERSCORE
EQUALS
(LOWER_NAME higher_order_handler)
L_PAREN
BACKSLASH
L_PAREN
R_PAREN
ARROW
(LOWER_NAME ignore)
L_PAREN
(LOWER_NAME ask)
L_PAREN
R_PAREN
R_PAREN
R_PAREN
EOF

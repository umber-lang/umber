LET
INDENT
(LOWER_NAME a)
EQUALS
(INT 1)
LINE_SEP
(LOWER_NAME fun)
(LOWER_NAME n)
EQUALS
(LOWER_NAME n)
(OPERATOR ^)
(INT 2)
(OPERATOR -)
(INT 2)
(OPERATOR +)
(LOWER_NAME n)
(OPERATOR +)
(LOWER_NAME n)
ASTERISK
L_PAREN
(LOWER_NAME n)
(OPERATOR -)
(INT 8)
R_PAREN
ASTERISK
(INT 5)
LINE_SEP
(LOWER_NAME b)
EQUALS
(LOWER_NAME a)
(OPERATOR +)
(INT 6)
DEDENT
LET
UNDERSCORE
EQUALS
INDENT
LET
INDENT
L_PAREN
R_PAREN
EQUALS
L_PAREN
R_PAREN
LINE_SEP
UNDERSCORE
EQUALS
(LOWER_NAME fun)
LINE_SEP
(LOWER_NAME list)
EQUALS
(STRING a)
(OPERATOR ::)
(STRING list)
(OPERATOR ::)
(STRING of)
(OPERATOR ::)
(STRING words)
(OPERATOR ::)
(UPPER_NAME Nil)
DEDENT
(INT 1)
(OPERATOR ==)
(INT 2)
(OPERATOR ||)
(INT 3)
(OPERATOR ==)
(INT 4)
DEDENT
LET
(LOWER_NAME bottom)
EQUALS
INDENT
LET
(LOWER_NAME bottom_again)
EQUALS
INDENT
LET
INDENT
(LOWER_NAME go_left)
EQUALS
(LOWER_NAME go_right)
LINE_SEP
(LOWER_NAME go_right)
EQUALS
(LOWER_NAME go_left)
DEDENT
(LOWER_NAME go_left)
DEDENT
(LOWER_NAME bottom_again)
DEDENT
EOF

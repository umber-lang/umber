LET
L_PAREN
(OPERATOR :/)
R_PAREN
(LOWER_NAME x)
(LOWER_NAME y)
EQUALS
(LOWER_NAME print)
L_PAREN
(LOWER_NAME x)
(OPERATOR ++)
(STRING " is mid. I prefer ")
(OPERATOR ++)
(LOWER_NAME y)
R_PAREN
LET
(LOWER_NAME apply)
(LOWER_NAME f)
EQUALS
L_PAREN
L_PAREN
(LOWER_NAME print)
(STRING "called apply")
(OPERATOR ";")
(STRING lasagna)
R_PAREN
COLON
(LOWER_NAME f)
COLON
R_PAREN
LET
L_PAREN
R_PAREN
EQUALS
LET
(LOWER_NAME g)
EQUALS
(LOWER_NAME apply)
L_PAREN
(OPERATOR :/)
R_PAREN
IN
(LOWER_NAME print)
(STRING between)
(OPERATOR ";")
(LOWER_NAME g)
(STRING penne)
EOF

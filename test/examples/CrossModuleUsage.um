let source = "everything depends on me"

module A =
  # FIXME: need to figure out some way to place restrictions on what you can have in
    recursive bindings - recursive calls need to be to functions?
  let a = b  # TODO: this should probably error out at the mir stage
  let b = a

  let print = Std.Prelude.print
  let print_source () = print source

let print_source () = A.print_source (); print source

val empty : List a
let empty = Nil